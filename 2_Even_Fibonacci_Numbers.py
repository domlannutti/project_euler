## Problem statement
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

## Solution
def even_fib(lim: int) -> int:
    phi = (1+5**0.5)/2 # golden ratio
    F = 0
    n = 0
    res = 0
    while F < lim:
        F = (phi**n / 5**0.5 + 1/2) // 1 # Binet's formula
        n += 1
        if F % 2 == 0:
            res += F
    return int(res)
   

if __name__ == "__main__":
    even_fib(4*10**6)
